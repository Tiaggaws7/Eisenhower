{"version":3,"sources":["components/PrintTasks.js","components/AddTasks.js","components/Eisenhower.js","App.js","reportWebVitals.js","index.js"],"names":["PrintTasks","type","tasks","handleDelete","useState","sortedTasks","setSortedTasks","tempSortedTasks","a","forEach","task","important","urgent","push","useEffect","sortTasks","map","title","className","onClick","id","AddTasks","addTasks","taskName","setTaskName","value","setValue","category","setCategory","onSubmit","e","preventDefault","onChange","target","name","Ein","uuid","setTasks","tasksCopy","slice","index","findIndex","splice","endDate","App","Eisenhower","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f24707ef.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport * as moment from 'moment'\n\nconst PrintTasks = ({type, tasks, handleDelete}) => {\n\n  const [sortedTasks, setSortedTasks] = useState([])\n\n  let tempSortedTasks = []\n\n  let tasksToPrint = []\n\n  async function sortTasks() {\n    if(type === \"importantEtUrgent\") {\n          tasks.forEach( task => task.important & task.urgent && tempSortedTasks.push( task ))\n    }\n    else if ( type === \"pasImportantEtUrgent\" ) {\n          tasks.forEach( task => !task.important & task.urgent && tempSortedTasks.push( task ))\n    }\n    else if (type === \"importantEtPasUrgent\") {\n        tasks.forEach( task => task.important & !task.urgent && tempSortedTasks.push( task ))\n    }\n    else if (type === \"pasImportantEtPasUrgent\") {\n        tasks.forEach( task => !task.important & !task.urgent && tempSortedTasks.push( task ))\n    }\n  }\n\n  useEffect(() => {\n    sortTasks()\n    setSortedTasks(tempSortedTasks)\n  }, [tasksToPrint])\n\n  return (\n    <ul>\n      { sortedTasks.map( task =>\n         <li>\n           {task.title} \n           <button className=\"task-del\" onClick={() => handleDelete(task.id)}> Delete </button>\n         </li>\n         ) \n      }\n    </ul>\n  )\n}\n\nexport default PrintTasks\n","import React, {useState, useLayoutEffect} from 'react'\n\nconst AddTasks = ({addTasks}) => {\n\n  const [taskName, setTaskName] = useState(\"\")\n\n  const [value, setValue] = useState(\"\")\n\n  const [category, setCategory] = useState({\n    important : true,\n    urgent : true\n  })\n\n  const handleNameChange = e => {\n    setTaskName(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n      addTasks(taskName, category.important, category.urgent)\n      setTaskName(\"\")\n  }\n\n  const handleChangeCategory = e => {\n\n    setValue(e.target.value)\n\n    if (e.target.value === \"importantEtUrgent\") {\n      setCategory({important : true, urgent : true})\n    }\n    else if (e.target.value === \"pasImportantEtUrgent\") {\n      setCategory({important : false, urgent : true})\n    }\n    else if (e.target.value === \"importantEtPasUrgent\") {\n      setCategory({important : true, urgent : false})\n    }\n    else if (e.target.value === \"pasImportantEtPasUrgent\") {\n      setCategory({important : false, urgent : false})\n    }\n  }\n\n  return (\n    <nav>\n    <p> task name :</p>\n    <form onSubmit={handleSubmit} className=\"addTaskForm\" >\n      <input className=\"addTaskNameInput\" type=\"text\" value={taskName} onChange={handleNameChange} />\n      <p>task category :</p>\n      <select name=\"category\" value={value} onChange={handleChangeCategory} >\n        <option value=\"importantEtUrgent\"> important and urgent </option>\n        <option value=\"pasImportantEtUrgent\" > not important and urgent </option>\n        <option value=\"importantEtPasUrgent\" > important and not urgent </option>\n        <option value=\"pasImportantEtPasUrgent\"> not important and not urgent </option>\n      </select>\n      <button className=\"nav-button\">Submit</button>\n    </form>\n    </nav>\n  )\n}\n\nexport default AddTasks\n","import React, {useState} from 'react'\nimport PrintTasks from './PrintTasks'\nimport AddTasks from './AddTasks'\nimport { v4 as uuid } from 'uuid';\n\n\nconst Ein = () => {\n\n  const [tasks, setTasks] = useState(\n    [ { id : uuid(), title : \"important and urgent\", important: true, urgent : true},\n      { id : uuid(), title : \"not important and urgent\", important: false, urgent : true },\n      { id : uuid(), title : \"important and not urgent\", important: true, urgent : false },\n      { id : uuid(), title : \"not important and not urgent\", important: false, urgent : false }]\n    );\n\n    const addTasks = (title, important, urgent, endDate) => {\n      const id = uuid()\n      setTasks([...tasks, {id, title, important, urgent, endDate}])\n    }\n\n\n    const handleDelete = (id) => {\n      const tasksCopy = tasks.slice()\n      const index = tasksCopy.findIndex(task => \n        task.id === id\n        )\n      tasksCopy.splice(index, 1)\n      setTasks([...tasksCopy])\n    }\n\n  return (\n    <>\n        <AddTasks addTasks={addTasks} />\n        <table>\n        <tr>\n          <td> </td>\n          <th> Important </th>\n          <th> Not Important </th>\n        </tr>\n\n          <tr>\n            <th> Urgent </th>\n            <td> <PrintTasks handleDelete={handleDelete} tasks={tasks} type=\"importantEtUrgent\" /> </td>\n            <td> <PrintTasks handleDelete={handleDelete} tasks={tasks} type=\"pasImportantEtUrgent\" /> </td>\n          </tr>\n          <tr>\n            <th> Not Urgent </th>\n            <td> <PrintTasks handleDelete={handleDelete} tasks={tasks} type=\"importantEtPasUrgent\"/> </td>\n            <td> <PrintTasks handleDelete={handleDelete} tasks={tasks} type=\"pasImportantEtPasUrgent\" /> </td>\n          </tr>\n        </table>\n    </>\n  )\n}\n\nexport default Ein\n","import Eisenhower from './components/Eisenhower'\nimport './styles/styles.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Eisenhower/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}