[{"/home/tiaggaws/Documents/React/eisenhower/src/index.js":"1","/home/tiaggaws/Documents/React/eisenhower/src/App.js":"2","/home/tiaggaws/Documents/React/eisenhower/src/reportWebVitals.js":"3","/home/tiaggaws/Documents/React/eisenhower/src/components/Eisenhower.js":"4","/home/tiaggaws/Documents/React/eisenhower/src/components/PrintTasks.js":"5","/home/tiaggaws/Documents/React/eisenhower/src/components/AddTasks.js":"6","/home/tiaggaws/Documents/React/eisenhower/src/components/TrierPar.js":"7"},{"size":500,"mtime":1610030923781,"results":"8","hashOfConfig":"9"},{"size":192,"mtime":1610030834142,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610030923781,"results":"11","hashOfConfig":"9"},{"size":1767,"mtime":1614666632619,"results":"12","hashOfConfig":"9"},{"size":1233,"mtime":1615034011703,"results":"13","hashOfConfig":"9"},{"size":1790,"mtime":1614664371917,"results":"14","hashOfConfig":"9"},{"size":1583,"mtime":1610030440676,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"cl8u8y",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"/home/tiaggaws/Documents/React/eisenhower/src/index.js",[],["36","37"],"/home/tiaggaws/Documents/React/eisenhower/src/App.js",[],"/home/tiaggaws/Documents/React/eisenhower/src/reportWebVitals.js",[],"/home/tiaggaws/Documents/React/eisenhower/src/components/Eisenhower.js",[],"/home/tiaggaws/Documents/React/eisenhower/src/components/PrintTasks.js",["38","39"],"import React, {useEffect, useState} from 'react'\nimport * as moment from 'moment'\n\nconst PrintTasks = ({type, tasks, handleDelete}) => {\n\n  const [sortedTasks, setSortedTasks] = useState([])\n\n  let tempSortedTasks = []\n\n  let tasksToPrint = []\n\n  async function sortTasks() {\n    if(type === \"importantEtUrgent\") {\n          tasks.forEach( task => task.important & task.urgent && tempSortedTasks.push( task ))\n    }\n    else if ( type === \"pasImportantEtUrgent\" ) {\n          tasks.forEach( task => !task.important & task.urgent && tempSortedTasks.push( task ))\n    }\n    else if (type === \"importantEtPasUrgent\") {\n        tasks.forEach( task => task.important & !task.urgent && tempSortedTasks.push( task ))\n    }\n    else if (type === \"pasImportantEtPasUrgent\") {\n        tasks.forEach( task => !task.important & !task.urgent && tempSortedTasks.push( task ))\n    }\n  }\n\n  useEffect(() => {\n    sortTasks()\n    setSortedTasks(tempSortedTasks)\n  }, [tasksToPrint])\n\n  return (\n    <ul>\n      { sortedTasks.map( task =>\n         <li>\n           {task.title} \n           <button className=\"task-del\" onClick={() => handleDelete(task.id)}> Delete </button>\n         </li>\n         ) \n      }\n    </ul>\n  )\n}\n\nexport default PrintTasks\n","/home/tiaggaws/Documents/React/eisenhower/src/components/AddTasks.js",["40"],"import React, {useState, useLayoutEffect} from 'react'\n\nconst AddTasks = ({addTasks}) => {\n\n  const [taskName, setTaskName] = useState(\"\")\n\n  const [value, setValue] = useState(\"\")\n\n  const [category, setCategory] = useState({\n    important : true,\n    urgent : true\n  })\n\n  const handleNameChange = e => {\n    setTaskName(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n      addTasks(taskName, category.important, category.urgent)\n      setTaskName(\"\")\n  }\n\n  const handleChangeCategory = e => {\n\n    setValue(e.target.value)\n\n    if (e.target.value === \"importantEtUrgent\") {\n      setCategory({important : true, urgent : true})\n    }\n    else if (e.target.value === \"pasImportantEtUrgent\") {\n      setCategory({important : false, urgent : true})\n    }\n    else if (e.target.value === \"importantEtPasUrgent\") {\n      setCategory({important : true, urgent : false})\n    }\n    else if (e.target.value === \"pasImportantEtPasUrgent\") {\n      setCategory({important : false, urgent : false})\n    }\n  }\n\n  return (\n    <nav>\n    <p> task name :</p>\n    <form onSubmit={handleSubmit} className=\"addTaskForm\" >\n      <input className=\"addTaskNameInput\" type=\"text\" value={taskName} onChange={handleNameChange} />\n      <p>task category :</p>\n      <select name=\"category\" value={value} onChange={handleChangeCategory} >\n        <option value=\"importantEtUrgent\"> important and urgent </option>\n        <option value=\"pasImportantEtUrgent\" > not important and urgent </option>\n        <option value=\"importantEtPasUrgent\" > important and not urgent </option>\n        <option value=\"pasImportantEtPasUrgent\"> not important and not urgent </option>\n      </select>\n      <button className=\"nav-button\">Submit</button>\n    </form>\n    </nav>\n  )\n}\n\nexport default AddTasks\n",["41","42"],"/home/tiaggaws/Documents/React/eisenhower/src/components/TrierPar.js",["43"],"import React, {useState, useLayoutEffect} from 'react'\nimport * as moment from 'moment'\n\n\nconst TrierPar = () => {\n\n  moment.locale('fr')\n\n  const todayDate = moment().format('DD/MM/YYYY')\n\n  const [date, setDate] = useState(todayDate)\n\n  const [dateValidation, setDateValidation] = useState(false)\n\n  const [value, setValue] = useState(\"Day\")\n\n  const dateRegex = /^[0-9]{2}\\/[0-1][0-9]\\/2[0-1][0-9]{2}$/\n\n  useLayoutEffect(() => {\n      if (dateRegex.test(date)){\n        setDateValidation(true)\n      } else {\n        setDateValidation(false)\n      }\n\n  }, [date])\n\n  const handleChangeDate = e => {\n    setDate(e.target.value)\n  }\n\n  const handleChangeDateSelect = e => {\n    setValue(e.target.value)\n  }\n\n  const printDate = () => {\n    if (!dateValidation){\n      return (\n        <>\n          <p>{date}</p>\n          <input className=\"dateInput\" value={date} onChange={handleChangeDate}  />\n          <p style={{color : \"#c175d7\"}}> format : dd/mm/yyyy </p>\n        </>\n      )\n    } else {\n      return (\n        <>\n        <p>{date}</p>\n        <input className=\"dateInput\" value={date} onChange={handleChangeDate}  />\n        </>\n      )\n    }\n  }\n\n  return (\n    <>\n    <p> from </p>\n      {printDate()}\n      <p> Sort by : </p>\n       <select name=\"Date\" value={value} onChange={handleChangeDateSelect} >\n          <option value=\"Day\">Day</option>\n          <option value=\"Week\">Week</option>\n          <option value=\"Month\">Month</option>\n          <option value=\"Year\">Year</option>\n       </select>\n       <p>Sort by {value}</p>\n    </>\n  )\n}\n\nexport default TrierPar\n",["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":13,"nodeType":"52","messageId":"53","endLine":2,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":30,"column":6,"nodeType":"56","endLine":30,"endColumn":20,"suggestions":"57"},{"ruleId":"50","severity":1,"message":"58","line":1,"column":26,"nodeType":"52","messageId":"53","endLine":1,"endColumn":41},{"ruleId":"46","replacedBy":"59"},{"ruleId":"48","replacedBy":"60"},{"ruleId":"54","severity":1,"message":"61","line":26,"column":6,"nodeType":"56","endLine":26,"endColumn":12,"suggestions":"62"},{"ruleId":"46","replacedBy":"63"},{"ruleId":"48","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'sortTasks' and 'tempSortedTasks'. Either include them or remove the dependency array.","ArrayExpression",["67"],"'useLayoutEffect' is defined but never used.",["65"],["66"],"React Hook useLayoutEffect has a missing dependency: 'dateRegex'. Either include it or remove the dependency array.",["68"],["65"],["66"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [sortTasks, tasksToPrint, tempSortedTasks]",{"range":"73","text":"74"},"Update the dependencies array to be: [date, dateRegex]",{"range":"75","text":"76"},[950,964],"[sortTasks, tasksToPrint, tempSortedTasks]",[560,566],"[date, dateRegex]"]